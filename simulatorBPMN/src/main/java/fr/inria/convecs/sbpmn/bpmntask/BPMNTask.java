package fr.inria.convecs.sbpmn.bpmntask;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.activiti.engine.FormService;
import org.activiti.engine.ProcessEngine;
import org.activiti.engine.ProcessEngines;
import org.activiti.engine.form.FormProperty;
import org.activiti.engine.form.TaskFormData;
import org.activiti.engine.task.Task;

public class BPMNTask {

	private Task task;
	
	private int duration;
	
	private Map<String, Integer> taskResources;

	public Map<String, Integer> getTaskResources() {
		return taskResources;
	}
	
	public String getId() {
		return task.getId();
		
	}

	public void setTaskResources(Map<String, Integer> taskResources) {
		this.taskResources = taskResources;
	}

	public BPMNTask(Task task) {
		
		this.task = task;
		this.taskResources = new HashMap<>();
		this.getTaskInfos();
		//this.storeTaskInfos();
	}

	private void getTaskInfos() {
		
		ProcessEngine engine = ProcessEngines.getDefaultProcessEngine();
		FormService formService = engine.getFormService();
		if(this.task.getId() != null) {
			TaskFormData taskformdate = formService.getTaskFormData(this.task.getId());
			List<FormProperty> listforms = taskformdate.getFormProperties();
			String durationkey = "duration";
			for (FormProperty form : listforms) {
				if (durationkey.contains(form.getName())) {
					this.duration = Integer.parseInt(form.getValue());
				} else {
					this.taskResources.put(form.getId(), Integer.parseInt(form.getValue()));
				}

			}
		}
		
	}

	public synchronized void storeTaskInfos() {

		final String DB_URL = "jdbc:mysql://localhost:3306/activiti2?useSSL=false&serverTimezone=UTC";
		final String USER = "root";// username
		final String PASS = "root";// pwd
		try {
			
			for (String key : taskResources.keySet()) {
				// String sql = "update act_hi_detail set TEXT_=" + taskResources.get(key) + "
				// where TASK_ID_= " + task.getId() + " and NAME_ = '"+ key + "';";

				// 1) create a java calendar instance
				Calendar calendar = Calendar.getInstance();

				// 2) get a java.util.Date from the calendar instance.
//				    this date will represent the current instant, or "now".
				java.util.Date now = calendar.getTime();

				// 3) a java current time (now) instanceI
				java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(now.getTime());

				// System.out.println("Connecting to a selected database...");
				// System.out.println("Connected database successfully...");

				String select_sql = "select count(*) as max_id from act_hi_detail";

				Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
				;
				PreparedStatement stmt = null;
				PreparedStatement stat = conn.prepareStatement(select_sql);
				ResultSet rs = stat.executeQuery();
				if (!rs.next()) {
					System.out.println("Something is wrong...");
					return;
				}

				// System.out.println("max_id:" + rs.getInt("max_id") );
				Integer returned = rs.getInt("max_id") + 10001;
				// System.out.println(returned);

				// System.out.println("rs:" + rs);

				// STEP 4: Execute a query
				// System.out.println("Creating statement...");

				String sql = "insert into act_hi_detail (ID_, TYPE_, TASK_ID_, NAME_, TIME_, TEXT_)" + "values ('"
						+ returned + "', 'FormProperty'," + task.getId() + ",'" + key + "', '" + currentTimestamp + "',"
						+ taskResources.get(key) * this.duration + ")";
				stmt = conn.prepareStatement(sql);
				stmt.executeUpdate(sql);
				conn.close();
				// stmt.executeUpdate(sql, autoGeneratedKeys)
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public Task getTask() {
		return task;
	}

	public void setTask(Task task) {
		this.task = task;
	}

	public int getDuration() {
		return duration;
	}

	public void setDuration(int duration) {
		this.duration = duration;
	}
}
